# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.

import pandas as pd
from snakemake.utils import validate
from collections import defaultdict

configfile: "config/config.yaml"

studies = pd.read_csv(config["studies"], dtype=str, sep='\t').set_index(["study_id", "ancestry"], drop=False)

def nan():
    return 'NA'
    
# store disease prevalences, if present (needed for evaluation)
prevalence = defaultdict(nan)
if 'prevalence' in config:
    with open(config['prevalence'], 'r') as infile:
        for line in infile:
            d, n = line.rstrip().split('\t')
            prevalence[d] = n

report: "report/workflow.rst"

# Allow users to fix the underlying OS via singularity.
singularity: 'docker://rmonti/prspipe:0.0.1'


rule all:
    input:
        # The first rule should define the default target files
        # Subsequent target rules can be specified below. They should start with all_*.

rule test_R:
     output:
        touch('R.ok')
     script:
        "scripts/R/source_config.R"

include: "rules/common.smk"
include: "rules/setup.smk"
include: "rules/base_sumstats.smk"
include: "rules/prs_ptclump.smk"
include: "rules/prs_lassosum.smk"
include: "rules/prs_sblup.smk"
include: "rules/prs_ldpred.smk"
include: "rules/prs_dbslmm.smk"
include: "rules/ld_matrix.smk"
include: "rules/prs_sbayesr.smk"
include: "rules/prs_prscs.smk"
include: "rules/prs_ldpred2.smk"
include: "rules/ukbb.smk"
include: "rules/genotype_harmonization.smk"
include: "rules/external_biobanks.smk"

# Master rules that trigger specific steps from the modules
# TODO: add other rules here, or add references to them

rule prs_1kg_precompld:
    # run PRS methods for 1000G using pre-computed reference panels
    # the predictions are used as baselines for the different ancestries
    input:
        # implemented by Sophie:
        rules.all_dbslmm_prep.input,
        rules.all_lassosum_prep.input,
        rules.all_ldpred_prep.input,
        rules.all_sblup_prep.input,
        # implemented by Remo:
        expand(rules.run_ldpred2_precompld_1kg.output, study=studies.study_id),
        expand(rules.run_prscs_precompld_1kg.output, study=studies.study_id),
        expand(rules.run_prscs_precompld_1kg_refukbb.output, study=studies.study_id),
        expand(rules.nested_sparse_thresholding_1kg.output, study=studies.study_id),
        expand(rules.dense_thresholding_1kg.output, study=studies.study_id),
        expand(rules.sparse_thresholding_1kg.output, study=studies.study_id),
        expand(rules.run_sbayesr_precompld_1kg_refukbb_robust.output, study=studies.study_id)
